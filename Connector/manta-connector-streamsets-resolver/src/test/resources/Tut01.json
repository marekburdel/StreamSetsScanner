{
  "pipelineConfig": {
    "schemaVersion": 6,
    "version": 13,
    "pipelineId": "Tut01538c067b-7bfa-4045-b975-fecfec040159",
    "title": "Tut01",
    "description": "doc - extended tutorial",
    "uuid": "01c356aa-01c5-464e-83a9-12ff57ee45fd",
    "configuration": [
      {
        "name": "executionMode",
        "value": "STANDALONE"
      },
      {
        "name": "edgeHttpUrl",
        "value": "http://localhost:18633"
      },
      {
        "name": "deliveryGuarantee",
        "value": "AT_LEAST_ONCE"
      },
      {
        "name": "testOriginStage",
        "value": "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
      },
      {
        "name": "startEventStage",
        "value": "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
      },
      {
        "name": "stopEventStage",
        "value": "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
      },
      {
        "name": "shouldRetry",
        "value": true
      },
      {
        "name": "retryAttempts",
        "value": -1
      },
      {
        "name": "notifyOnStates",
        "value": [
          "RUN_ERROR",
          "STOPPED",
          "FINISHED"
        ]
      },
      {
        "name": "emailIDs",
        "value": []
      },
      {
        "name": "constants",
        "value": []
      },
      {
        "name": "badRecordsHandling",
        "value": "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget::1"
      },
      {
        "name": "errorRecordPolicy",
        "value": "ORIGINAL_RECORD"
      },
      {
        "name": "statsAggregatorStage",
        "value": "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget::1"
      },
      {
        "name": "workerCount",
        "value": 0
      },
      {
        "name": "clusterSlaveMemory",
        "value": 2048
      },
      {
        "name": "clusterSlaveJavaOpts",
        "value": "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
      },
      {
        "name": "clusterLauncherEnv",
        "value": []
      },
      {
        "name": "mesosDispatcherURL",
        "value": null
      },
      {
        "name": "logLevel",
        "value": "INFO"
      },
      {
        "name": "hdfsS3ConfDir",
        "value": null
      },
      {
        "name": "rateLimit",
        "value": 0
      },
      {
        "name": "maxRunners",
        "value": 0
      },
      {
        "name": "shouldCreateFailureSnapshot",
        "value": true
      },
      {
        "name": "runnerIdleTIme",
        "value": 60
      },
      {
        "name": "webhookConfigs",
        "value": []
      },
      {
        "name": "sparkConfigs",
        "value": []
      },
      {
        "name": "clusterConfig.clusterType",
        "value": "LOCAL"
      },
      {
        "name": "clusterConfig.sparkMasterUrl",
        "value": "local[*]"
      },
      {
        "name": "clusterConfig.deployMode",
        "value": "CLIENT"
      },
      {
        "name": "clusterConfig.hadoopUserName",
        "value": null
      },
      {
        "name": "clusterConfig.sparkAppName",
        "value": "${pipeline:title()}"
      },
      {
        "name": "clusterConfig.stagingDir",
        "value": "/streamsets"
      },
      {
        "name": "clusterConfig.useYarnKerberosKeytab",
        "value": false
      },
      {
        "name": "clusterConfig.yarnKerberosKeytabSource",
        "value": "PROPERTIES_FILE"
      },
      {
        "name": "clusterConfig.yarnKerberosKeytab",
        "value": null
      },
      {
        "name": "clusterConfig.yarnKerberosPrincipal",
        "value": "name@DOMAIN"
      },
      {
        "name": "databricksConfig.baseUrl",
        "value": null
      },
      {
        "name": "databricksConfig.credentialType",
        "value": null
      },
      {
        "name": "databricksConfig.username",
        "value": ""
      },
      {
        "name": "databricksConfig.password",
        "value": ""
      },
      {
        "name": "databricksConfig.token",
        "value": ""
      },
      {
        "name": "databricksConfig.clusterConfig",
        "value": "{\n    \"num_workers\": 8,\n    \"spark_version\": \"5.3.x-scala2.11\",\n    \"node_type_id\": \"i3.xlarge\"\n}"
      },
      {
        "name": "livyConfig.baseUrl",
        "value": "https://localhost:30443/gateway/default/livy/v1/"
      },
      {
        "name": "livyConfig.username",
        "value": ""
      },
      {
        "name": "livyConfig.password",
        "value": ""
      },
      {
        "name": "amazonEMRConfig.userRegion",
        "value": null
      },
      {
        "name": "amazonEMRConfig.userRegionCustom",
        "value": null
      },
      {
        "name": "amazonEMRConfig.accessKey",
        "value": ""
      },
      {
        "name": "amazonEMRConfig.secretKey",
        "value": ""
      },
      {
        "name": "amazonEMRConfig.s3StagingUri",
        "value": null
      },
      {
        "name": "amazonEMRConfig.provisionNewCluster",
        "value": false
      },
      {
        "name": "amazonEMRConfig.clusterId",
        "value": null
      },
      {
        "name": "amazonEMRConfig.clusterPrefix",
        "value": null
      },
      {
        "name": "amazonEMRConfig.terminateCluster",
        "value": false
      },
      {
        "name": "amazonEMRConfig.loggingEnabled",
        "value": true
      },
      {
        "name": "amazonEMRConfig.s3LogUri",
        "value": null
      },
      {
        "name": "amazonEMRConfig.enableEMRDebugging",
        "value": true
      },
      {
        "name": "amazonEMRConfig.serviceRole",
        "value": "EMR_DefaultRole"
      },
      {
        "name": "amazonEMRConfig.jobFlowRole",
        "value": "EMR_EC2_DefaultRole"
      },
      {
        "name": "amazonEMRConfig.visibleToAllUsers",
        "value": true
      },
      {
        "name": "amazonEMRConfig.ec2SubnetId",
        "value": null
      },
      {
        "name": "amazonEMRConfig.masterSecurityGroup",
        "value": null
      },
      {
        "name": "amazonEMRConfig.slaveSecurityGroup",
        "value": null
      },
      {
        "name": "amazonEMRConfig.instanceCount",
        "value": 2
      },
      {
        "name": "amazonEMRConfig.masterInstanceType",
        "value": null
      },
      {
        "name": "amazonEMRConfig.masterInstanceTypeCustom",
        "value": null
      },
      {
        "name": "amazonEMRConfig.slaveInstanceType",
        "value": null
      },
      {
        "name": "amazonEMRConfig.slaveInstanceTypeCustom",
        "value": null
      }
    ],
    "uiInfo": {
      "previewConfig": {
        "previewSource": "CONFIGURED_SOURCE",
        "batchSize": "5",
        "timeout": 30000,
        "writeToDestinations": false,
        "executeLifecycleEvents": false,
        "showHeader": false,
        "showFieldType": true,
        "rememberMe": false
      }
    },
    "fragments": [],
    "stages": [
      {
        "instanceName": "Directory_01",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_origin_spooldir_SpoolDirDSource",
        "stageVersion": "10",
        "configuration": [
          {
            "name": "conf.dataFormatConfig.compression",
            "value": "NONE"
          },
          {
            "name": "conf.dataFormatConfig.filePatternInArchive",
            "value": "*"
          },
          {
            "name": "conf.dataFormatConfig.charset",
            "value": "UTF-8"
          },
          {
            "name": "conf.dataFormatConfig.removeCtrlChars",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.textMaxLineLen",
            "value": 1024
          },
          {
            "name": "conf.dataFormatConfig.useCustomDelimiter",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.customDelimiter",
            "value": "\\r\\n"
          },
          {
            "name": "conf.dataFormatConfig.includeCustomDelimiterInTheText",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.jsonContent",
            "value": "MULTIPLE_OBJECTS"
          },
          {
            "name": "conf.dataFormatConfig.jsonMaxObjectLen",
            "value": 4096
          },
          {
            "name": "conf.dataFormatConfig.csvFileFormat",
            "value": "CSV"
          },
          {
            "name": "conf.dataFormatConfig.csvHeader",
            "value": "WITH_HEADER"
          },
          {
            "name": "conf.dataFormatConfig.csvAllowExtraColumns",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.csvExtraColumnPrefix",
            "value": "_extra_"
          },
          {
            "name": "conf.dataFormatConfig.csvMaxObjectLen",
            "value": 1024
          },
          {
            "name": "conf.dataFormatConfig.csvCustomDelimiter",
            "value": "|"
          },
          {
            "name": "conf.dataFormatConfig.multiCharacterFieldDelimiter",
            "value": "||"
          },
          {
            "name": "conf.dataFormatConfig.multiCharacterLineDelimiter",
            "value": "${str:unescapeJava('\\\\n')}"
          },
          {
            "name": "conf.dataFormatConfig.csvCustomEscape",
            "value": "\\"
          },
          {
            "name": "conf.dataFormatConfig.csvCustomQuote",
            "value": "\""
          },
          {
            "name": "conf.dataFormatConfig.csvEnableComments",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.csvCommentMarker",
            "value": "#"
          },
          {
            "name": "conf.dataFormatConfig.csvIgnoreEmptyLines",
            "value": true
          },
          {
            "name": "conf.dataFormatConfig.csvRecordType",
            "value": "LIST_MAP"
          },
          {
            "name": "conf.dataFormatConfig.csvSkipStartLines",
            "value": 0
          },
          {
            "name": "conf.dataFormatConfig.parseNull",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.nullConstant",
            "value": "\\\\N"
          },
          {
            "name": "conf.dataFormatConfig.xmlRecordElement",
            "value": null
          },
          {
            "name": "conf.dataFormatConfig.includeFieldXpathAttributes",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.xPathNamespaceContext",
            "value": []
          },
          {
            "name": "conf.dataFormatConfig.outputFieldAttributes",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.xmlMaxObjectLen",
            "value": 4096
          },
          {
            "name": "conf.dataFormatConfig.logMode",
            "value": "COMMON_LOG_FORMAT"
          },
          {
            "name": "conf.dataFormatConfig.logMaxObjectLen",
            "value": 1024
          },
          {
            "name": "conf.dataFormatConfig.retainOriginalLine",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.customLogFormat",
            "value": "%h %l %u %t \"%r\" %>s %b"
          },
          {
            "name": "conf.dataFormatConfig.regex",
            "value": "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
          },
          {
            "name": "conf.dataFormatConfig.fieldPathsToGroupName",
            "value": [
              {
                "fieldPath": "/",
                "group": 1
              }
            ]
          },
          {
            "name": "conf.dataFormatConfig.grokPatternDefinition",
            "value": null
          },
          {
            "name": "conf.dataFormatConfig.grokPattern",
            "value": "%{COMMONAPACHELOG}"
          },
          {
            "name": "conf.dataFormatConfig.onParseError",
            "value": "ERROR"
          },
          {
            "name": "conf.dataFormatConfig.maxStackTraceLines",
            "value": 50
          },
          {
            "name": "conf.dataFormatConfig.enableLog4jCustomLogFormat",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.log4jCustomLogFormat",
            "value": "%r [%t] %-5p %c %x - %m%n"
          },
          {
            "name": "conf.dataFormatConfig.avroSchema",
            "value": null
          },
          {
            "name": "conf.dataFormatConfig.schemaRegistryUrls",
            "value": []
          },
          {
            "name": "conf.dataFormatConfig.schemaLookupMode",
            "value": "SUBJECT"
          },
          {
            "name": "conf.dataFormatConfig.subject",
            "value": null
          },
          {
            "name": "conf.dataFormatConfig.schemaId",
            "value": null
          },
          {
            "name": "conf.dataFormatConfig.protoDescriptorFile",
            "value": null
          },
          {
            "name": "conf.dataFormatConfig.messageType",
            "value": null
          },
          {
            "name": "conf.dataFormatConfig.isDelimited",
            "value": true
          },
          {
            "name": "conf.dataFormatConfig.binaryMaxObjectLen",
            "value": 1024
          },
          {
            "name": "conf.dataFormatConfig.datagramMode",
            "value": "SYSLOG"
          },
          {
            "name": "conf.dataFormatConfig.typesDbPath",
            "value": null
          },
          {
            "name": "conf.dataFormatConfig.convertTime",
            "value": false
          },
          {
            "name": "conf.dataFormatConfig.excludeInterval",
            "value": true
          },
          {
            "name": "conf.dataFormatConfig.authFilePath",
            "value": null
          },
          {
            "name": "conf.dataFormatConfig.netflowOutputValuesMode",
            "value": "RAW_AND_INTERPRETED"
          },
          {
            "name": "conf.dataFormatConfig.maxTemplateCacheSize",
            "value": -1
          },
          {
            "name": "conf.dataFormatConfig.templateCacheTimeoutMs",
            "value": -1
          },
          {
            "name": "conf.dataFormatConfig.netflowOutputValuesModeDatagram",
            "value": "RAW_AND_INTERPRETED"
          },
          {
            "name": "conf.dataFormatConfig.maxTemplateCacheSizeDatagram",
            "value": -1
          },
          {
            "name": "conf.dataFormatConfig.templateCacheTimeoutMsDatagram",
            "value": -1
          },
          {
            "name": "conf.dataFormatConfig.wholeFileMaxObjectLen",
            "value": 8192
          },
          {
            "name": "conf.dataFormatConfig.rateLimit",
            "value": "-1"
          },
          {
            "name": "conf.dataFormatConfig.excelHeader",
            "value": null
          },
          {
            "name": "conf.dataFormat",
            "value": "DELIMITED"
          },
          {
            "name": "conf.spoolDir",
            "value": "/home/marek/manta/streamsets-datacollector-3.9.1/tutorial/origin"
          },
          {
            "name": "conf.numberOfThreads",
            "value": 1
          },
          {
            "name": "conf.pathMatcherMode",
            "value": "GLOB"
          },
          {
            "name": "conf.filePattern",
            "value": "*csv"
          },
          {
            "name": "conf.useLastModified",
            "value": "TIMESTAMP"
          },
          {
            "name": "conf.processSubdirectories",
            "value": false
          },
          {
            "name": "conf.allowLateDirectory",
            "value": false
          },
          {
            "name": "conf.overrunLimit",
            "value": 128
          },
          {
            "name": "conf.batchSize",
            "value": 1000
          },
          {
            "name": "conf.poolingTimeoutSecs",
            "value": 60
          },
          {
            "name": "conf.maxSpoolFiles",
            "value": 1000
          },
          {
            "name": "conf.spoolingPeriod",
            "value": 5
          },
          {
            "name": "conf.initialFileToProcess",
            "value": null
          },
          {
            "name": "conf.errorArchiveDir",
            "value": null
          },
          {
            "name": "conf.postProcessing",
            "value": "NONE"
          },
          {
            "name": "conf.archiveDir",
            "value": null
          },
          {
            "name": "conf.retentionTimeMins",
            "value": 0
          },
          {
            "name": "stageOnRecordError",
            "value": "TO_ERROR"
          }
        ],
        "uiInfo": {
          "yPos": 45,
          "stageType": "SOURCE",
          "rawSource": {
            "configuration": [
              {
                "name": "fileName"
              }
            ]
          },
          "description": "",
          "label": "Directory 1",
          "xPos": 51
        },
        "inputLanes": [],
        "outputLanes": [
          "Directory_01OutputLane15626835324270"
        ],
        "eventLanes": [],
        "services": []
      },
      {
        "instanceName": "StreamSelector_01",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_processor_selector_SelectorDProcessor",
        "stageVersion": "1",
        "configuration": [
          {
            "name": "lanePredicates",
            "value": [
              {
                "outputLane": "StreamSelector_01OutputLane1562685013080",
                "predicate": "${record:value('/payment_type') == 'CRD'}"
              },
              {
                "outputLane": "StreamSelector_01OutputLane1562684778951",
                "predicate": "default"
              }
            ]
          },
          {
            "name": "stageOnRecordError",
            "value": "TO_ERROR"
          },
          {
            "name": "stageRequiredFields",
            "value": [
              "/payment_type"
            ]
          },
          {
            "name": "stageRecordPreconditions",
            "value": []
          }
        ],
        "uiInfo": {
          "description": "",
          "label": "Stream Selector 1",
          "xPos": 280,
          "yPos": 110,
          "stageType": "PROCESSOR"
        },
        "inputLanes": [
          "Directory_01OutputLane15626835324270"
        ],
        "outputLanes": [
          "StreamSelector_01OutputLane1562685013080",
          "StreamSelector_01OutputLane1562684778951"
        ],
        "eventLanes": [],
        "services": []
      },
      {
        "instanceName": "JythonEvaluator_01",
        "library": "streamsets-datacollector-jython_2_7-lib",
        "stageName": "com_streamsets_pipeline_stage_processor_jython_JythonDProcessor",
        "stageVersion": "3",
        "configuration": [
          {
            "name": "processingMode",
            "value": "BATCH"
          },
          {
            "name": "initScript",
            "value": "#\n# Available Objects:\n#\n#  state: a dict that is preserved between invocations of this script. \n#         Useful for caching bits of data e.g. counters.\n#\n#  log.<loglevel>(msg, obj...): use instead of print to send log messages to the log4j log instead of stdout.\n#                               loglevel is any log4j level: e.g. info, error, warn, trace.\n#  sdcFunctions.getFieldNull(Record, 'field path'): Receive a constant defined above \n#                                  to check if the field is typed field with value null\n#  sdcFunctions.createMap(boolean listMap): Create a map for use as a field in a record.\n#                            Pass True to this function to create a list map (ordered map)\n#\n\n# state['connection'] = Connection().open()"
          },
          {
            "name": "script",
            "value": "try: \n  for record in records:\n    cc = record.value['credit_card']\n    if cc == '':\n      error.write(record, \"Payment type was CRD, but credit card was null\")\n      continue\n\n    cc_type = ''\n    if cc.startswith('4'):\n      cc_type = 'Visa'\n    elif cc.startswith(('51','52','53','54','55')):\n      cc_type = 'MasterCard'\n    elif cc.startswith(('34','37')):\n      cc_type = 'AMEX'\n    elif cc.startswith(('300','301','302','303','304','305','36','38')):\n      cc_type = 'Diners Club'\n    elif cc.startswith(('6011','65')):\n      cc_type = 'Discover'\n    elif cc.startswith(('2131','1800','35')):\n      cc_type = 'JCB'\n    else:\n      cc_type = 'Other'\n\n    record.value['credit_card_type'] = cc_type\n\n    output.write(record)\nexcept Exception as e:\n  error.write(record, e.message)"
          },
          {
            "name": "destroyScript",
            "value": "#\n# Available Objects:\n#\n#  state: a dict that is preserved between invocations of this script. \n#         Useful for caching bits of data e.g. counters.\n#\n#  log.<loglevel>(msg, obj...): use instead of print to send log messages to the log4j log instead of stdout.\n#                               loglevel is any log4j level: e.g. info, error, warn, trace.\n#  sdcFunctions.getFieldNull(Record, 'field path'): Receive a constant defined above \n#                                  to check if the field is typed field with value null\n#  sdcFunctions.createMap(boolean listMap): Create a map for use as a field in a record.\n#                            Pass True to this function to create a list map (ordered map)\n#  sdcFunctions.createEvent(String type, int version): Creates a new event.\n#                            Create new empty event with standard headers.\n#  sdcFunctions.toEvent(Record): Send event to event stream\n#                            Only events created with sdcFunctions.createEvent are supported.\n#\n\n# state['connection'].close()"
          },
          {
            "name": "scriptRecordType",
            "value": "NATIVE_OBJECTS"
          },
          {
            "name": "stageOnRecordError",
            "value": "TO_ERROR"
          },
          {
            "name": "stageRequiredFields",
            "value": []
          },
          {
            "name": "stageRecordPreconditions",
            "value": []
          }
        ],
        "uiInfo": {
          "description": "",
          "label": "Jython Evaluator 1",
          "xPos": 500,
          "yPos": 40,
          "stageType": "PROCESSOR"
        },
        "inputLanes": [
          "StreamSelector_01OutputLane1562685013080"
        ],
        "outputLanes": [
          "JythonEvaluator_01OutputLane15626852097010"
        ],
        "eventLanes": [],
        "services": []
      },
      {
        "instanceName": "FieldMasker_01",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_processor_fieldmask_FieldMaskDProcessor",
        "stageVersion": "1",
        "configuration": [
          {
            "name": "fieldMaskConfigs",
            "value": [
              {
                "fields": [
                  "/credit_card"
                ],
                "maskType": "FIXED_LENGTH",
                "regex": "(.*)([0-9]{4})",
                "groupsToShow": "2"
              },
              {
                "fields": [
                  "/credit_card"
                ],
                "maskType": "VARIABLE_LENGTH",
                "regex": "(.*)",
                "groupsToShow": "1"
              },
              {
                "fields": [
                  "/credit_card"
                ],
                "maskType": "CUSTOM",
                "regex": "(.*)",
                "groupsToShow": "1",
                "mask": "##xxxx"
              },
              {
                "fields": [
                  "/credit_card"
                ],
                "maskType": "REGEX",
                "regex": "(.*)",
                "groupsToShow": "1"
              }
            ]
          },
          {
            "name": "stageOnRecordError",
            "value": "TO_ERROR"
          },
          {
            "name": "stageRequiredFields",
            "value": []
          },
          {
            "name": "stageRecordPreconditions",
            "value": []
          }
        ],
        "uiInfo": {
          "description": "",
          "label": "Field Masker 1",
          "xPos": 720,
          "yPos": 40,
          "stageType": "PROCESSOR"
        },
        "inputLanes": [
          "JythonEvaluator_01OutputLane15626852097010"
        ],
        "outputLanes": [
          "FieldMasker_01OutputLane15626854333800"
        ],
        "eventLanes": [],
        "services": []
      },
      {
        "instanceName": "ExpressionEvaluator_01",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
        "stageVersion": "2",
        "configuration": [
          {
            "name": "expressionProcessorConfigs",
            "value": [
              {
                "fieldToSet": "/credit_card_type",
                "expression": "n/a"
              }
            ]
          },
          {
            "name": "headerAttributeConfigs",
            "value": [
              {}
            ]
          },
          {
            "name": "fieldAttributeConfigs",
            "value": [
              {
                "fieldToSet": "/"
              }
            ]
          },
          {
            "name": "stageOnRecordError",
            "value": "TO_ERROR"
          },
          {
            "name": "stageRequiredFields",
            "value": []
          },
          {
            "name": "stageRecordPreconditions",
            "value": []
          }
        ],
        "uiInfo": {
          "description": "",
          "label": "Expression Evaluator 1",
          "xPos": 500,
          "yPos": 170,
          "stageType": "PROCESSOR"
        },
        "inputLanes": [
          "StreamSelector_01OutputLane1562684778951"
        ],
        "outputLanes": [
          "ExpressionEvaluator_01OutputLane15626860720490"
        ],
        "eventLanes": [],
        "services": []
      },
      {
        "instanceName": "LocalFS_01",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_destination_localfilesystem_LocalFileSystemDTarget",
        "stageVersion": "3",
        "configuration": [
          {
            "name": "configs.uniquePrefix",
            "value": "out_"
          },
          {
            "name": "configs.fileNameSuffix",
            "value": null
          },
          {
            "name": "configs.dirPathTemplateInHeader",
            "value": false
          },
          {
            "name": "configs.dirPathTemplate",
            "value": "/home/marek/manta/streamsets-datacollector-3.9.1/tutorial/destination"
          },
          {
            "name": "configs.timeZoneID",
            "value": "UTC"
          },
          {
            "name": "configs.timeDriver",
            "value": "${time:now()}"
          },
          {
            "name": "configs.maxRecordsPerFile",
            "value": 0
          },
          {
            "name": "configs.maxFileSize",
            "value": 5
          },
          {
            "name": "configs.idleTimeout",
            "value": "${1 * HOURS}"
          },
          {
            "name": "configs.compression",
            "value": "NONE"
          },
          {
            "name": "configs.otherCompression",
            "value": null
          },
          {
            "name": "configs.fileType",
            "value": "SEQUENCE_FILE"
          },
          {
            "name": "configs.keyEl",
            "value": "${uuid()}"
          },
          {
            "name": "configs.lateRecordsLimit",
            "value": "${1 * HOURS}"
          },
          {
            "name": "configs.rollIfHeader",
            "value": false
          },
          {
            "name": "configs.rollHeaderName",
            "value": "roll"
          },
          {
            "name": "configs.lateRecordsAction",
            "value": "SEND_TO_ERROR"
          },
          {
            "name": "configs.lateRecordsDirPathTemplate",
            "value": "/tmp/late/${YYYY()}-${MM()}-${DD()}"
          },
          {
            "name": "configs.dataFormat",
            "value": "DELIMITED"
          },
          {
            "name": "configs.hdfsPermissionCheck",
            "value": true
          },
          {
            "name": "configs.permissionEL",
            "value": null
          },
          {
            "name": "configs.skipOldTempFileRecovery",
            "value": false
          },
          {
            "name": "configs.dataGeneratorFormatConfig.charset",
            "value": "UTF-8"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.csvFileFormat",
            "value": "CSV"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.csvHeader",
            "value": "WITH_HEADER"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.csvReplaceNewLines",
            "value": true
          },
          {
            "name": "configs.dataGeneratorFormatConfig.csvReplaceNewLinesString",
            "value": ""
          },
          {
            "name": "configs.dataGeneratorFormatConfig.csvCustomDelimiter",
            "value": "|"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.csvCustomEscape",
            "value": "\\"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.csvCustomQuote",
            "value": "\""
          },
          {
            "name": "configs.dataGeneratorFormatConfig.jsonMode",
            "value": "MULTIPLE_OBJECTS"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.textFieldPath",
            "value": "/text"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.textRecordSeparator",
            "value": "\\n"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.textFieldMissingAction",
            "value": "ERROR"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.textEmptyLineIfNull",
            "value": false
          },
          {
            "name": "configs.dataGeneratorFormatConfig.avroSchemaSource",
            "value": null
          },
          {
            "name": "configs.dataGeneratorFormatConfig.avroSchema",
            "value": null
          },
          {
            "name": "configs.dataGeneratorFormatConfig.registerSchema",
            "value": false
          },
          {
            "name": "configs.dataGeneratorFormatConfig.schemaRegistryUrlsForRegistration",
            "value": []
          },
          {
            "name": "configs.dataGeneratorFormatConfig.schemaRegistryUrls",
            "value": []
          },
          {
            "name": "configs.dataGeneratorFormatConfig.schemaLookupMode",
            "value": "SUBJECT"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.subject",
            "value": null
          },
          {
            "name": "configs.dataGeneratorFormatConfig.subjectToRegister",
            "value": null
          },
          {
            "name": "configs.dataGeneratorFormatConfig.schemaId",
            "value": null
          },
          {
            "name": "configs.dataGeneratorFormatConfig.avroCompression",
            "value": "NULL"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.binaryFieldPath",
            "value": "/"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.protoDescriptorFile",
            "value": null
          },
          {
            "name": "configs.dataGeneratorFormatConfig.messageType",
            "value": null
          },
          {
            "name": "configs.dataGeneratorFormatConfig.fileNameEL",
            "value": null
          },
          {
            "name": "configs.dataGeneratorFormatConfig.wholeFileExistsAction",
            "value": "TO_ERROR"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.includeChecksumInTheEvents",
            "value": false
          },
          {
            "name": "configs.dataGeneratorFormatConfig.checksumAlgorithm",
            "value": "MD5"
          },
          {
            "name": "configs.dataGeneratorFormatConfig.xmlPrettyPrint",
            "value": true
          },
          {
            "name": "configs.dataGeneratorFormatConfig.xmlValidateSchema",
            "value": false
          },
          {
            "name": "configs.dataGeneratorFormatConfig.xmlSchema",
            "value": null
          },
          {
            "name": "stageOnRecordError",
            "value": "TO_ERROR"
          },
          {
            "name": "stageRequiredFields",
            "value": []
          },
          {
            "name": "stageRecordPreconditions",
            "value": []
          }
        ],
        "uiInfo": {
          "description": "",
          "label": "Local FS 1",
          "xPos": 1431,
          "yPos": 44,
          "stageType": "TARGET"
        },
        "inputLanes": [
          "FieldMasker_01OutputLane15626854333800"
        ],
        "outputLanes": [],
        "eventLanes": [],
        "services": []
      },
      {
        "instanceName": "FieldTypeConverter_01",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_processor_fieldtypeconverter_FieldTypeConverterDProcessor",
        "stageVersion": "2",
        "configuration": [
          {
            "name": "convertBy",
            "value": "BY_TYPE"
          },
          {
            "name": "fieldTypeConverterConfigs",
            "value": [
              {
                "fields": [
                  "/dropoff_datetime",
                  "/pickup_datetime"
                ],
                "targetType": "DATETIME",
                "treatInputFieldAsDate": false,
                "dataLocale": "en,US",
                "scale": -1,
                "decimalScaleRoundingStrategy": "ROUND_UNNECESSARY",
                "dateFormat": "YYYY_MM_DD_HH_MM_SS",
                "zonedDateTimeFormat": "ISO_ZONED_DATE_TIME",
                "encoding": "UTF-8"
              },
              {
                "fields": [
                  "/fare_amount",
                  "/dropoff_latitude",
                  "/dropoff_longitude",
                  "/mta_tax",
                  "/pickup_latitude",
                  "/pickup_longitude",
                  "/surcharge",
                  "/tip_amount",
                  "/tolls_amount",
                  "/total_amount"
                ],
                "targetType": "DOUBLE",
                "treatInputFieldAsDate": false,
                "dataLocale": "en,US",
                "scale": -1,
                "decimalScaleRoundingStrategy": "ROUND_UNNECESSARY",
                "dateFormat": "YYYY_MM_DD",
                "zonedDateTimeFormat": "ISO_ZONED_DATE_TIME",
                "encoding": "UTF-8"
              }
            ]
          },
          {
            "name": "wholeTypeConverterConfigs",
            "value": [
              {
                "sourceType": "INTEGER",
                "targetType": "INTEGER",
                "treatInputFieldAsDate": false,
                "dataLocale": "en,US",
                "scale": -1,
                "decimalScaleRoundingStrategy": "ROUND_UNNECESSARY",
                "dateFormat": "YYYY_MM_DD",
                "zonedDateTimeFormat": "ISO_ZONED_DATE_TIME",
                "encoding": "UTF-8"
              }
            ]
          },
          {
            "name": "stageOnRecordError",
            "value": "TO_ERROR"
          },
          {
            "name": "stageRequiredFields",
            "value": []
          },
          {
            "name": "stageRecordPreconditions",
            "value": []
          }
        ],
        "uiInfo": {
          "description": "",
          "label": "Field Type Converter 1",
          "xPos": 940,
          "yPos": 190,
          "stageType": "PROCESSOR"
        },
        "inputLanes": [
          "FieldMasker_01OutputLane15626854333800",
          "ExpressionEvaluator_01OutputLane15626860720490"
        ],
        "outputLanes": [
          "FieldTypeConverter_01OutputLane15627480662970"
        ],
        "eventLanes": [],
        "services": []
      },
      {
        "instanceName": "ExpressionEvaluator_02",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_processor_expression_ExpressionDProcessor",
        "stageVersion": "2",
        "configuration": [
          {
            "name": "expressionProcessorConfigs",
            "value": [
              {
                "fieldToSet": "/pickup_location",
                "expression": "${record:value('/pickup_latitude')}, ${record:value('/pickup_longitude')}"
              },
              {
                "fieldToSet": "/dropoff_location",
                "expression": "${record:value('/dropoff_latitude')}, ${record:value('/dropoff_longitude')}"
              },
              {
                "fieldToSet": "/trip_revenue",
                "expression": "${record:value('/total_amount') - record:value('/tip_amount')}"
              }
            ]
          },
          {
            "name": "headerAttributeConfigs",
            "value": []
          },
          {
            "name": "fieldAttributeConfigs",
            "value": []
          },
          {
            "name": "stageOnRecordError",
            "value": "TO_ERROR"
          },
          {
            "name": "stageRequiredFields",
            "value": []
          },
          {
            "name": "stageRecordPreconditions",
            "value": []
          }
        ],
        "uiInfo": {
          "description": "",
          "label": "Expression Evaluator 2",
          "xPos": 1235,
          "yPos": 192,
          "stageType": "PROCESSOR"
        },
        "inputLanes": [
          "FieldTypeConverter_01OutputLane15627480662970"
        ],
        "outputLanes": [
          "ExpressionEvaluator_02OutputLane15627488746470"
        ],
        "eventLanes": [],
        "services": []
      },
      {
        "instanceName": "Trash_01",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_destination_devnull_NullDTarget",
        "stageVersion": "1",
        "configuration": [],
        "uiInfo": {
          "description": "",
          "label": "Trash 1",
          "xPos": 1480,
          "yPos": 185,
          "stageType": "TARGET"
        },
        "inputLanes": [
          "ExpressionEvaluator_02OutputLane15627488746470"
        ],
        "outputLanes": [],
        "eventLanes": [],
        "services": []
      }
    ],
    "errorStage": {
      "instanceName": "WritetoFile_ErrorStage",
      "library": "streamsets-datacollector-basic-lib",
      "stageName": "com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget",
      "stageVersion": "1",
      "configuration": [
        {
          "name": "directory",
          "value": "./tutorial/error/"
        },
        {
          "name": "uniquePrefix",
          "value": "err_"
        },
        {
          "name": "rotationIntervalSecs",
          "value": "${1 * HOURS}"
        },
        {
          "name": "maxFileSizeMbs",
          "value": 5
        }
      ],
      "uiInfo": {
        "description": "",
        "label": "Error Records - Write to File",
        "xPos": 60,
        "yPos": 50,
        "stageType": "TARGET"
      },
      "inputLanes": [],
      "outputLanes": [],
      "eventLanes": [],
      "services": []
    },
    "info": {
      "pipelineId": "Tut01538c067b-7bfa-4045-b975-fecfec040159",
      "title": "Tut01",
      "description": "doc - extended tutorial",
      "created": 1562747415439,
      "lastModified": 1563894928007,
      "creator": "admin",
      "lastModifier": "admin",
      "lastRev": "0",
      "uuid": "01c356aa-01c5-464e-83a9-12ff57ee45fd",
      "valid": true,
      "metadata": {
        "labels": [
          "Tutorial"
        ]
      },
      "name": "Tut01538c067b-7bfa-4045-b975-fecfec040159",
      "sdcVersion": "3.9.1",
      "sdcId": "c57bfe8d-9e5f-11e9-bb70-9de79064f601"
    },
    "metadata": {
      "labels": [
        "Tutorial"
      ]
    },
    "statsAggregatorStage": {
      "instanceName": "statsAggregatorStageInstance",
      "library": "streamsets-datacollector-basic-lib",
      "stageName": "com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget",
      "stageVersion": "1",
      "configuration": [],
      "uiInfo": {
        "stageType": "TARGET",
        "label": "Stats Aggregator -Write Directly to Control Hub - statistics are not aggregated across Data Collectors"
      },
      "inputLanes": [],
      "outputLanes": [],
      "eventLanes": [],
      "services": []
    },
    "startEventStages": [
      {
        "instanceName": "Discard_StartEventStage",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
        "stageVersion": "1",
        "configuration": [],
        "uiInfo": {
          "description": "",
          "label": "Start Event - Discard",
          "xPos": 60,
          "yPos": 50,
          "stageType": "TARGET"
        },
        "inputLanes": [],
        "outputLanes": [],
        "eventLanes": [],
        "services": []
      }
    ],
    "stopEventStages": [
      {
        "instanceName": "Discard_StopEventStage",
        "library": "streamsets-datacollector-basic-lib",
        "stageName": "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
        "stageVersion": "1",
        "configuration": [],
        "uiInfo": {
          "description": "",
          "label": "Stop Event - Discard",
          "xPos": 60,
          "yPos": 50,
          "stageType": "TARGET"
        },
        "inputLanes": [],
        "outputLanes": [],
        "eventLanes": [],
        "services": []
      }
    ],
    "testOriginStage": {
      "instanceName": "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStage",
      "library": "streamsets-datacollector-dev-lib",
      "stageName": "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource",
      "stageVersion": "3",
      "configuration": [
        {
          "name": "rawData",
          "value": "{\n  \"f1\": \"abc\",\n  \"f2\": \"xyz\",\n  \"f3\": \"lmn\"\n}"
        },
        {
          "name": "stopAfterFirstBatch",
          "value": false
        },
        {
          "name": "eventData",
          "value": null
        },
        {
          "name": "stageOnRecordError",
          "value": "TO_ERROR"
        }
      ],
      "uiInfo": {
        "stageType": "SOURCE",
        "label": "Test Origin - Dev Raw Data Source"
      },
      "inputLanes": [],
      "outputLanes": [
        "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStageOutputLane1"
      ],
      "eventLanes": [],
      "services": [
        {
          "service": "com.streamsets.pipeline.api.service.dataformats.DataFormatParserService",
          "serviceVersion": 1,
          "configuration": [
            {
              "name": "displayFormats",
              "value": "DELIMITED,JSON,LOG,SDC_JSON,TEXT,XML"
            },
            {
              "name": "dataFormat",
              "value": "JSON"
            },
            {
              "name": "dataFormatConfig.compression",
              "value": "NONE"
            },
            {
              "name": "dataFormatConfig.filePatternInArchive",
              "value": "*"
            },
            {
              "name": "dataFormatConfig.charset",
              "value": "UTF-8"
            },
            {
              "name": "dataFormatConfig.removeCtrlChars",
              "value": false
            },
            {
              "name": "dataFormatConfig.textMaxLineLen",
              "value": 1024
            },
            {
              "name": "dataFormatConfig.useCustomDelimiter",
              "value": false
            },
            {
              "name": "dataFormatConfig.customDelimiter",
              "value": "\\r\\n"
            },
            {
              "name": "dataFormatConfig.includeCustomDelimiterInTheText",
              "value": false
            },
            {
              "name": "dataFormatConfig.jsonContent",
              "value": "MULTIPLE_OBJECTS"
            },
            {
              "name": "dataFormatConfig.jsonMaxObjectLen",
              "value": 4096
            },
            {
              "name": "dataFormatConfig.csvFileFormat",
              "value": "CSV"
            },
            {
              "name": "dataFormatConfig.csvHeader",
              "value": "NO_HEADER"
            },
            {
              "name": "dataFormatConfig.csvAllowExtraColumns",
              "value": false
            },
            {
              "name": "dataFormatConfig.csvExtraColumnPrefix",
              "value": "_extra_"
            },
            {
              "name": "dataFormatConfig.csvMaxObjectLen",
              "value": 1024
            },
            {
              "name": "dataFormatConfig.csvCustomDelimiter",
              "value": "|"
            },
            {
              "name": "dataFormatConfig.multiCharacterFieldDelimiter",
              "value": "||"
            },
            {
              "name": "dataFormatConfig.multiCharacterLineDelimiter",
              "value": "${str:unescapeJava('\\\\n')}"
            },
            {
              "name": "dataFormatConfig.csvCustomEscape",
              "value": "\\"
            },
            {
              "name": "dataFormatConfig.csvCustomQuote",
              "value": "\""
            },
            {
              "name": "dataFormatConfig.csvEnableComments",
              "value": false
            },
            {
              "name": "dataFormatConfig.csvCommentMarker",
              "value": "#"
            },
            {
              "name": "dataFormatConfig.csvIgnoreEmptyLines",
              "value": false
            },
            {
              "name": "dataFormatConfig.csvRecordType",
              "value": "LIST_MAP"
            },
            {
              "name": "dataFormatConfig.csvSkipStartLines",
              "value": 0
            },
            {
              "name": "dataFormatConfig.parseNull",
              "value": false
            },
            {
              "name": "dataFormatConfig.nullConstant",
              "value": "\\\\N"
            },
            {
              "name": "dataFormatConfig.xmlRecordElement",
              "value": null
            },
            {
              "name": "dataFormatConfig.includeFieldXpathAttributes",
              "value": false
            },
            {
              "name": "dataFormatConfig.xPathNamespaceContext",
              "value": []
            },
            {
              "name": "dataFormatConfig.outputFieldAttributes",
              "value": false
            },
            {
              "name": "dataFormatConfig.xmlMaxObjectLen",
              "value": 4096
            },
            {
              "name": "dataFormatConfig.logMode",
              "value": "COMMON_LOG_FORMAT"
            },
            {
              "name": "dataFormatConfig.logMaxObjectLen",
              "value": 1024
            },
            {
              "name": "dataFormatConfig.retainOriginalLine",
              "value": false
            },
            {
              "name": "dataFormatConfig.customLogFormat",
              "value": "%h %l %u %t \"%r\" %>s %b"
            },
            {
              "name": "dataFormatConfig.regex",
              "value": "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
            },
            {
              "name": "dataFormatConfig.fieldPathsToGroupName",
              "value": [
                {
                  "fieldPath": "/",
                  "group": 1
                }
              ]
            },
            {
              "name": "dataFormatConfig.grokPatternDefinition",
              "value": null
            },
            {
              "name": "dataFormatConfig.grokPattern",
              "value": "%{COMMONAPACHELOG}"
            },
            {
              "name": "dataFormatConfig.onParseError",
              "value": "ERROR"
            },
            {
              "name": "dataFormatConfig.maxStackTraceLines",
              "value": 50
            },
            {
              "name": "dataFormatConfig.enableLog4jCustomLogFormat",
              "value": false
            },
            {
              "name": "dataFormatConfig.log4jCustomLogFormat",
              "value": "%r [%t] %-5p %c %x - %m%n"
            },
            {
              "name": "dataFormatConfig.avroSchemaSource",
              "value": null
            },
            {
              "name": "dataFormatConfig.avroSchema",
              "value": null
            },
            {
              "name": "dataFormatConfig.schemaRegistryUrls",
              "value": []
            },
            {
              "name": "dataFormatConfig.schemaLookupMode",
              "value": "SUBJECT"
            },
            {
              "name": "dataFormatConfig.subject",
              "value": null
            },
            {
              "name": "dataFormatConfig.schemaId",
              "value": null
            },
            {
              "name": "dataFormatConfig.protoDescriptorFile",
              "value": null
            },
            {
              "name": "dataFormatConfig.messageType",
              "value": null
            },
            {
              "name": "dataFormatConfig.isDelimited",
              "value": false
            },
            {
              "name": "dataFormatConfig.binaryMaxObjectLen",
              "value": 1024
            },
            {
              "name": "dataFormatConfig.datagramMode",
              "value": "SYSLOG"
            },
            {
              "name": "dataFormatConfig.typesDbPath",
              "value": null
            },
            {
              "name": "dataFormatConfig.convertTime",
              "value": false
            },
            {
              "name": "dataFormatConfig.excludeInterval",
              "value": false
            },
            {
              "name": "dataFormatConfig.authFilePath",
              "value": null
            },
            {
              "name": "dataFormatConfig.netflowOutputValuesMode",
              "value": "RAW_AND_INTERPRETED"
            },
            {
              "name": "dataFormatConfig.maxTemplateCacheSize",
              "value": -1
            },
            {
              "name": "dataFormatConfig.templateCacheTimeoutMs",
              "value": -1
            },
            {
              "name": "dataFormatConfig.netflowOutputValuesModeDatagram",
              "value": "RAW_AND_INTERPRETED"
            },
            {
              "name": "dataFormatConfig.maxTemplateCacheSizeDatagram",
              "value": -1
            },
            {
              "name": "dataFormatConfig.templateCacheTimeoutMsDatagram",
              "value": -1
            },
            {
              "name": "dataFormatConfig.wholeFileMaxObjectLen",
              "value": 8192
            },
            {
              "name": "dataFormatConfig.rateLimit",
              "value": "-1"
            },
            {
              "name": "dataFormatConfig.verifyChecksum",
              "value": false
            },
            {
              "name": "dataFormatConfig.excelHeader",
              "value": null
            }
          ]
        }
      ]
    },
    "valid": true,
    "issues": {
      "pipelineIssues": [],
      "stageIssues": {},
      "issueCount": 0
    },
    "previewable": true
  },
  "pipelineRules": {
    "schemaVersion": 3,
    "version": 2,
    "metricsRuleDefinitions": [
      {
        "id": "badRecordsAlertID",
        "alertText": "High incidence of Error Records",
        "metricId": "pipeline.batchErrorRecords.counter",
        "metricType": "COUNTER",
        "metricElement": "COUNTER_COUNT",
        "condition": "${value() > 100}",
        "sendEmail": false,
        "enabled": false,
        "timestamp": 1562682819273,
        "valid": true
      },
      {
        "id": "stageErrorAlertID",
        "alertText": "High incidence of Stage Errors",
        "metricId": "pipeline.batchErrorMessages.counter",
        "metricType": "COUNTER",
        "metricElement": "COUNTER_COUNT",
        "condition": "${value() > 100}",
        "sendEmail": false,
        "enabled": false,
        "timestamp": 1562682819273,
        "valid": true
      },
      {
        "id": "idleGaugeID",
        "alertText": "Pipeline is Idle",
        "metricId": "RuntimeStatsGauge.gauge",
        "metricType": "GAUGE",
        "metricElement": "TIME_OF_LAST_RECEIVED_RECORD",
        "condition": "${time:now() - value() > 120000}",
        "sendEmail": false,
        "enabled": false,
        "timestamp": 1562682819273,
        "valid": true
      },
      {
        "id": "batchTimeAlertID",
        "alertText": "Batch taking more time to process",
        "metricId": "RuntimeStatsGauge.gauge",
        "metricType": "GAUGE",
        "metricElement": "CURRENT_BATCH_AGE",
        "condition": "${value() > 200}",
        "sendEmail": false,
        "enabled": false,
        "timestamp": 1562682819273,
        "valid": true
      }
    ],
    "dataRuleDefinitions": [
      {
        "id": "dataRule1562686578011",
        "label": "Missing Card Numbers",
        "lane": "StreamSelector_01OutputLane1562685013080",
        "samplingPercentage": 35.0,
        "samplingRecordsToRetain": 10,
        "condition": "${record:value(\"/credit_card\") == \"\"}",
        "alertEnabled": true,
        "alertText": "At least 10 missing credit card numbers!",
        "thresholdType": "COUNT",
        "thresholdValue": "10",
        "minVolume": 1000,
        "meterEnabled": true,
        "sendEmail": false,
        "enabled": true,
        "timestamp": 0,
        "valid": true
      }
    ],
    "driftRuleDefinitions": [],
    "uuid": "6ad4e9d7-0e66-4890-a5d8-6bcbe2ecb3a5",
    "configuration": [
      {
        "name": "emailIDs",
        "value": [
          "marekk.burdel@gmail.com",
          "marekk.burdel@gmail.com"
        ]
      },
      {
        "name": "webhookConfigs",
        "value": [
          {
            "payload": "{\n  \"text\" : \"{{ALERT_TEXT}}. The alert, {{ALERT_NAME}},  was triggered for pipeline '{{PIPELINE_TITLE}}'. \\n The threshold of {{ALERT_VALUE}} records, for the following condition was reached at {{TIME}}: {{ALERT_CONDITION}} \\n <{{PIPELINE_URL}}|Click here> for details!\"\n}",
            "webhookUrl": "asdfasdfasdfaaa",
            "headers": [],
            "httpMethod": "POST",
            "contentType": "application/json",
            "authType": "NONE"
          },
          {
            "payload": "{\n  \"text\" : \"{{ALERT_TEXT}}. The alert, {{ALERT_NAME}},  was triggered for pipeline '{{PIPELINE_TITLE}}'. \\n The threshold of {{ALERT_VALUE}} records, for the following condition was reached at {{TIME}}: {{ALERT_CONDITION}} \\n <{{PIPELINE_URL}}|Click here> for details!\"\n}",
            "headers": [],
            "httpMethod": "POST",
            "contentType": "application/json",
            "authType": "NONE"
          },
          {
            "payload": "{\n  \"text\" : \"{{ALERT_TEXT}}. The alert, {{ALERT_NAME}},  was triggered for pipeline '{{PIPELINE_TITLE}}'. \\n The threshold of {{ALERT_VALUE}} records, for the following condition was reached at {{TIME}}: {{ALERT_CONDITION}} \\n <{{PIPELINE_URL}}|Click here> for details!\"\n}",
            "headers": [],
            "httpMethod": "POST",
            "contentType": "application/json",
            "authType": "NONE"
          }
        ]
      }
    ],
    "ruleIssues": null,
    "configIssues": null
  },
  "libraryDefinitions": null
}